buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
        classpath("org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:0.4.9")
    }
}

plugins {
    id "org.sonarqube" version "2.2"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'jsonschema2pojo'
apply plugin: 'jacoco'

 

sourceSets {
	main { 
		java.srcDir file("${project.buildDir}/generated-sources/js2p")
	}
	inttest {
		java.srcDir file('src/inttest/java')
		resources.srcDir file('src/inttest/resources')
	}
}

processResources {
	filesMatching("**/*.yml") {
    	expand(project.properties)
    }
}

jar {
    baseName = 'microservice-ref'
    version =  '0.1.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}

dependencies {

    compile("org.springframework.boot:spring-boot-starter-web:1.5.2.RELEASE") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-validation")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-aop")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.cloud:spring-cloud-starter-sleuth:1.2.0.RELEASE")
    compile("org.apache.httpcomponents:httpclient")
    
    //Auto-generate getters/setters and other glue code
    compileOnly("org.projectlombok:lombok:1.16.14")
    
    //Documentation Dependencies
    compile("io.springfox:springfox-swagger2:2.6.1")
    compile("io.springfox:springfox-swagger-ui:2.6.1")
    
    //Database Connection and Schema Change Management
    runtime("mysql:mysql-connector-java:5.1.38")
    compile("org.liquibase:liquibase-core")
    testCompile("org.hsqldb:hsqldb")
    
    //Kafka Integration
    compile("org.springframework.kafka:spring-kafka:1.1.2.RELEASE")
    //testCompile("org.springframework.kafka:sping-kafka-test:1.1.2.RELEASE")
    
    //Rest API Dependencies
  	compile("commons-lang:commons-lang:2.6")
  	//compile 'javax.validation:validation-api:1.1.0.CR2'
  	//compile 'com.fasterxml.jackson.core:jackson-databind:2.1.4'

    //Test Dependencies
    testImplementation('junit:junit:4.12')
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework.security:spring-security-test")
}

//https://github.com/joelittlejohn/jsonschema2pojo/tree/master/jsonschema2pojo-gradle-plugin
jsonSchema2Pojo {
	sourceType = 'jsonschema'
	source = files("${sourceSets.main.output.resourcesDir}/schema")
	targetDirectory = file("${project.buildDir}/generated-sources/js2p")
	targetPackage = 'com.lucksolutions.service.api'
	includeJsr303Annotations = true
	classNameSuffix = "v1"
	//serializable = true
}

